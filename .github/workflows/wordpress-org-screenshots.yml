name: WordPress.org screenshot generation

on:
    workflow_dispatch:
    pull_request: # TESTING ONLY

# # Cancels all previous workflow runs for pull requests that have not completed.
# concurrency:
#   # The concurrency group contains the workflow name and the branch name for pull requests
#   # or the commit hash for any other events.
#   group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
#   cancel-in-progress: true


jobs:
    screesnhot-generator:
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                locale: ['en_US', 'fr_FR', 'de_DE']

        steps:
        - name: Checkout
          uses: actions/checkout@v4

        - name: Setup localised wp-env for ${{ matrix.locale }}
          run: |
            touch .wp-env.override.json
            > .wp-env.override.json
            echo "{ \"config\": { \"WPLANG\": \"${{ matrix.locale }}\" } }" >> .wp-env.override.json

        - uses: actions/cache@v4
          id: playwright-cache
          with:
            path: |
              ~/.cache/ms-playwright
            key: ${{ runner.os }}-playwright-${{ hashFiles('**/package-lock.json') }}

        - name: Setup Node
          uses: actions/setup-node@v4
          with:
            node-version-file: '.nvmrc'
          # Enable built-in functionality for caching and restoring dependencies, which is disabled by default.
          # The actions/setup-node uses actions/cache under the hood.
          # https://github.com/actions/setup-node#caching-global-packages-data
          cache: 'npm'

        # Restoring the short lived node_modules cache
        # to be used accross all workflows running on the last commit.
        # https://github.com/actions/cache/blob/main/caching-strategies.md#creating-a-short-lived-cache
        - uses: actions/cache/restore@v4
          id: node_modules-cache
          with:
            path: |
              ./node_modules
            key: ${{ runner.os }}-node_modules-${{ github.sha }}-${{ hashFiles('package-lock.json') }}

        - name: NPM install
          if: steps.node_modules-cache.outputs.cache-hit != 'true'
          run: npm ci --legacy-peer-deps

        # Creating a short lived node_modules cache
        - uses: actions/cache/save@v4
          if: steps.node_modules-cache.outputs.cache-hit != 'true'
          with:
            path: |
              ./node_modules
            key: ${{ steps.node_modules-cache.outputs.cache-primary-key }}

        - name: Install Playwright dependencies
          run: npx playwright install --with-deps
          if: steps.playwright-cache.outputs.cache-hit != 'true'
        - run: npx playwright install-deps
          if: steps.playwright-cache.outputs.cache-hit == 'true'

        - name: Starting localised wp-env
          run: |
                wp-env start --update
        
                # Set language on the different environments
                # https://developer.wordpress.org/block-editor/reference-guides/packages/packages-env/#wp-env-run-container-command
                # will run against localhost:8888
                wp-env run cli wp option update WPLANG ${{ matrix.locale }}
                # will run against localhost:8889
                wp-env run tests-cli wp option update WPLANG ${{ matrix.locale }}

                wp-env run tests-cli wp language plugin install gatherpress ${{ matrix.locale }}

        - name: Starting Playwright & Running the screenshot tests
          run: |
                npm run screenshots:wporg

        - name: Starting Playwright again & Updating the Screenshots
          if: failure()
          run: |
                npm run screenshots:wporg -- --update-snapshots

        - name: Commit updated screenshots
          run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add -A
            git commit -m "Screenshots for ${{ matrix.locale }} updated!"

        # Using Github CLI in Workflows
        # https://docs.github.com/en/actions/using-workflows/using-github-cli-in-workflows
        # https://cli.github.com/manual/gh_pr_create
        - name: Create a Pull Request
          run: gh pr create -B main --title 'Update ${{ matrix.locale }} screenshots for wordpress.org' --body 'Created by Github action'
          env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}